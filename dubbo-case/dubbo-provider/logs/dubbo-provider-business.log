2016/02/05 15:06:25,933 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:06:25,938 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:06:25,938 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:06:25,942  INFO [main] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@184f7eba: startup date [Fri Feb 05 15:06:25 CST 2016]; root of context hierarchy
2016/02/05 15:06:25,984 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:06:25,984 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:06:25,985 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:06:25,998  INFO [main] - Loading XML bean definitions from class path resource [applicationContext.xml]
2016/02/05 15:06:26,106 DEBUG [main] - Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
2016/02/05 15:06:26,257 DEBUG [main] - Loading schema mappings from [META-INF/spring.schemas]
2016/02/05 15:06:26,263 DEBUG [main] - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016/02/05 15:06:26,265 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
2016/02/05 15:06:26,317 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-4.2.xsd
2016/02/05 15:06:26,327 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.2.xsd
2016/02/05 15:06:26,337 DEBUG [main] - Loading bean definitions
2016/02/05 15:06:26,351 DEBUG [main] - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016/02/05 15:06:26,366 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:06:26,366 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:06:26,366 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:06:26,380 DEBUG [main] - Looking for matching resources in directory tree [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business]
2016/02/05 15:06:26,380 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,392 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,392 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi\dao] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,393 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi\impl] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,393 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,394 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\dao] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,394 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:06:26,396 DEBUG [main] - Resolved location pattern [classpath*:com/hyf/business/**/impl/**/*.class] to resources [file [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl\TestServiceImpl.class]]
2016/02/05 15:06:26,440 DEBUG [main] - Identified candidate component class: file [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl\TestServiceImpl.class]
2016/02/05 15:06:26,463  INFO [main] - Loading XML bean definitions from class path resource [dubbo-provider.xml]
2016/02/05 15:06:26,465 DEBUG [main] - Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
2016/02/05 15:06:26,466 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
2016/02/05 15:06:26,485 DEBUG [main] - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016/02/05 15:06:26,505 DEBUG [main] - Loading bean definitions
2016/02/05 15:06:26,515  INFO [main] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016/02/05 15:06:26,548 DEBUG [main] - Imported 6 bean definitions from relative location [dubbo-provider.xml]
2016/02/05 15:06:26,549 DEBUG [main] - Loaded 14 bean definitions from location pattern [applicationContext.xml]
2016/02/05 15:06:26,549 DEBUG [main] - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@184f7eba: org.springframework.beans.factory.support.DefaultListableBeanFactory@27b05189: defining beans [testServiceImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,dataValidator,dubbo-provider-business,com.alibaba.dubbo.config.RegistryConfig,com.alibaba.dubbo.config.ProviderConfig,dubbo,com.hyf.openapi.interfaces.ApiInterface,providerService]; root of factory hierarchy
2016/02/05 15:06:26,592 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:06:26,592 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:06:26,607 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,608 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:06:26,647 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:06:26,647 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,649 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,649 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:06:26,649 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:06:26,654 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,655 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,655 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:06:26,655 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,656 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:06:26,658 DEBUG [main] - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@68d77506]
2016/02/05 15:06:26,661 DEBUG [main] - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@27572b88]
2016/02/05 15:06:26,662 DEBUG [main] - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27b05189: defining beans [testServiceImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,dataValidator,dubbo-provider-business,com.alibaba.dubbo.config.RegistryConfig,com.alibaba.dubbo.config.ProviderConfig,dubbo,com.hyf.openapi.interfaces.ApiInterface,providerService,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016/02/05 15:06:26,662 DEBUG [main] - Creating shared instance of singleton bean 'testServiceImpl'
2016/02/05 15:06:26,663 DEBUG [main] - Creating instance of bean 'testServiceImpl'
2016/02/05 15:06:26,681 DEBUG [main] - Eagerly caching bean 'testServiceImpl' to allow for resolving potential circular references
2016/02/05 15:06:26,691 DEBUG [main] - Finished creating instance of bean 'testServiceImpl'
2016/02/05 15:06:26,691 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:06:26,691 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:06:26,691 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:06:26,691 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:06:26,691 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:06:26,692 DEBUG [main] - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:06:26,693 DEBUG [main] - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016/02/05 15:06:26,694 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:06:26,695 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:06:26,695 DEBUG [main] - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:06:26,695 DEBUG [main] - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016/02/05 15:06:26,697 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:06:26,697 DEBUG [main] - Creating shared instance of singleton bean 'dataValidator'
2016/02/05 15:06:26,697 DEBUG [main] - Creating instance of bean 'dataValidator'
2016/02/05 15:06:26,746 DEBUG [main] - Eagerly caching bean 'dataValidator' to allow for resolving potential circular references
2016/02/05 15:06:26,748 DEBUG [main] - Finished creating instance of bean 'dataValidator'
2016/02/05 15:06:26,748 DEBUG [main] - Creating shared instance of singleton bean 'dubbo-provider-business'
2016/02/05 15:06:26,748 DEBUG [main] - Creating instance of bean 'dubbo-provider-business'
2016/02/05 15:06:26,751 DEBUG [main] - Eagerly caching bean 'dubbo-provider-business' to allow for resolving potential circular references
2016/02/05 15:06:26,761 DEBUG [main] - Finished creating instance of bean 'dubbo-provider-business'
2016/02/05 15:06:26,761 DEBUG [main] - Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:06:26,761 DEBUG [main] - Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:06:26,763 DEBUG [main] - Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016/02/05 15:06:26,767 DEBUG [main] - Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:06:26,768 DEBUG [main] - Creating shared instance of singleton bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:06:26,768 DEBUG [main] - Creating instance of bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:06:26,773 DEBUG [main] - Eagerly caching bean 'com.alibaba.dubbo.config.ProviderConfig' to allow for resolving potential circular references
2016/02/05 15:06:26,816 DEBUG [main] - Finished creating instance of bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:06:26,816 DEBUG [main] - Creating shared instance of singleton bean 'dubbo'
2016/02/05 15:06:26,816 DEBUG [main] - Creating instance of bean 'dubbo'
2016/02/05 15:06:26,819 DEBUG [main] - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016/02/05 15:06:26,823 DEBUG [main] - Finished creating instance of bean 'dubbo'
2016/02/05 15:06:26,824 DEBUG [main] - Creating shared instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:26,824 DEBUG [main] - Creating instance of bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:26,848 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:26,944 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:26,959 DEBUG [main] - Eagerly caching bean 'com.hyf.openapi.interfaces.ApiInterface' to allow for resolving potential circular references
2016/02/05 15:06:26,975 DEBUG [main] - Creating shared instance of singleton bean 'providerService'
2016/02/05 15:06:26,975 DEBUG [main] - Creating instance of bean 'providerService'
2016/02/05 15:06:26,978 DEBUG [main] - Registered injected element on class [com.hyf.openapi.impl.ApiInterfaceServiceImpl]: AutowiredFieldElement for com.hyf.openapi.utils.DataValidator com.hyf.openapi.impl.ApiInterfaceServiceImpl.dataValidator
2016/02/05 15:06:26,978 DEBUG [main] - Eagerly caching bean 'providerService' to allow for resolving potential circular references
2016/02/05 15:06:26,980 DEBUG [main] - Processing injected element of bean 'providerService': AutowiredFieldElement for com.hyf.openapi.utils.DataValidator com.hyf.openapi.impl.ApiInterfaceServiceImpl.dataValidator
2016/02/05 15:06:26,982 DEBUG [main] - Returning cached instance of singleton bean 'dataValidator'
2016/02/05 15:06:26,982 DEBUG [main] - Autowiring by type from bean name 'providerService' to bean named 'dataValidator'
2016/02/05 15:06:26,983 DEBUG [main] - Finished creating instance of bean 'providerService'
2016/02/05 15:06:26,985 DEBUG [main] - Invoking afterPropertiesSet() on bean with name 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:26,986 DEBUG [main] - Returning cached instance of singleton bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:06:26,986 DEBUG [main] - Returning cached instance of singleton bean 'dubbo'
2016/02/05 15:06:26,986 DEBUG [main] - Returning cached instance of singleton bean 'dubbo-provider-business'
2016/02/05 15:06:26,987 DEBUG [main] - Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:06:26,987 DEBUG [main] - Returning cached instance of singleton bean 'dubbo'
2016/02/05 15:06:26,987 DEBUG [main] - Finished creating instance of bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:26,987 DEBUG [main] - Returning cached instance of singleton bean 'providerService'
2016/02/05 15:06:26,987 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:06:26,987 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:06:26,988 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:06:27,029 DEBUG [main] - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5f93fb44]
2016/02/05 15:06:27,029 DEBUG [main] - Returning cached instance of singleton bean 'lifecycleProcessor'
2016/02/05 15:06:27,033 DEBUG [main] - Returning cached instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:27,033  INFO [main] -  [DUBBO] The service ready on spring started. service: com.hyf.openapi.interfaces.ApiInterface, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,107 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,120 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,131 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,143  INFO [main] -  [DUBBO] Export dubbo service com.hyf.openapi.interfaces.ApiInterface to local registry, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,143  INFO [main] -  [DUBBO] Export dubbo service com.hyf.openapi.interfaces.ApiInterface to url dubbo://192.168.1.8:20001/com.hyf.openapi.interfaces.ApiInterface?anyhost=true&application=dubbo-provider-business&default.loadbalance=random&default.retries=0&default.threads=100&default.timeout=40000&dubbo=2.5.4-SNAPSHOT&generic=false&interface=com.hyf.openapi.interfaces.ApiInterface&methods=doPost&pid=40404&side=provider&timestamp=1454655987048, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,158 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,191 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,204 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,247 DEBUG [main] -  [DUBBO] Using select timeout of 500, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,247 DEBUG [main] -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,303  INFO [main] -  [DUBBO] Start NettyServer bind /0.0.0.0:20001, export /192.168.1.8:20001, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:06:27,306 DEBUG [main] - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016/02/05 15:06:27,306 DEBUG [main] - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016/02/05 15:06:27,306 DEBUG [main] - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016/02/05 15:06:27,308 DEBUG [main] - Returning cached instance of singleton bean 'lifecycleProcessor'
2016/02/05 15:06:27,308 DEBUG [main] - Returning cached instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:06:27,318  INFO [main] - ---------------start dubbo-provider-business sucessful---------------------
2016/02/05 15:56:08,216 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:56:08,219 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:56:08,219 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:56:08,224  INFO [main] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@748ff9a7: startup date [Fri Feb 05 15:56:08 CST 2016]; root of context hierarchy
2016/02/05 15:56:08,264 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:56:08,265 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:56:08,265 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:56:08,278  INFO [main] - Loading XML bean definitions from class path resource [applicationContext.xml]
2016/02/05 15:56:08,377 DEBUG [main] - Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
2016/02/05 15:56:08,528 DEBUG [main] - Loading schema mappings from [META-INF/spring.schemas]
2016/02/05 15:56:08,534 DEBUG [main] - Loaded schema mappings: {http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}
2016/02/05 15:56:08,535 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
2016/02/05 15:56:08,592 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-4.2.xsd
2016/02/05 15:56:08,601 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.2.xsd
2016/02/05 15:56:08,609 DEBUG [main] - Loading bean definitions
2016/02/05 15:56:08,623 DEBUG [main] - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2016/02/05 15:56:08,636 DEBUG [main] - Adding [systemProperties] PropertySource with lowest search precedence
2016/02/05 15:56:08,636 DEBUG [main] - Adding [systemEnvironment] PropertySource with lowest search precedence
2016/02/05 15:56:08,636 DEBUG [main] - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016/02/05 15:56:08,648 DEBUG [main] - Looking for matching resources in directory tree [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business]
2016/02/05 15:56:08,648 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,650 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,651 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi\dao] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,651 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\openapi\impl] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,651 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,652 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\dao] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,652 DEBUG [main] - Searching directory [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl] for files matching pattern [E:/github_Eclipse/dubbo/dubbo-case/dubbo-provider/dubbo-provider-business/target/classes/com/hyf/business/**/impl/**/*.class]
2016/02/05 15:56:08,653 DEBUG [main] - Resolved location pattern [classpath*:com/hyf/business/**/impl/**/*.class] to resources [file [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl\TestServiceImpl.class]]
2016/02/05 15:56:08,681 DEBUG [main] - Identified candidate component class: file [E:\github_Eclipse\dubbo\dubbo-case\dubbo-provider\dubbo-provider-business\target\classes\com\hyf\business\test\impl\TestServiceImpl.class]
2016/02/05 15:56:08,701  INFO [main] - Loading XML bean definitions from class path resource [dubbo-provider.xml]
2016/02/05 15:56:08,703 DEBUG [main] - Using JAXP provider [org.apache.xerces.jaxp.DocumentBuilderFactoryImpl]
2016/02/05 15:56:08,705 DEBUG [main] - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd
2016/02/05 15:56:08,720 DEBUG [main] - Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
2016/02/05 15:56:08,744 DEBUG [main] - Loading bean definitions
2016/02/05 15:56:08,753  INFO [main] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016/02/05 15:56:08,788 DEBUG [main] - Imported 6 bean definitions from relative location [dubbo-provider.xml]
2016/02/05 15:56:08,788 DEBUG [main] - Loaded 14 bean definitions from location pattern [applicationContext.xml]
2016/02/05 15:56:08,788 DEBUG [main] - Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@748ff9a7: org.springframework.beans.factory.support.DefaultListableBeanFactory@fe63b60: defining beans [testServiceImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,dataValidator,dubbo-provider-business,com.alibaba.dubbo.config.RegistryConfig,com.alibaba.dubbo.config.ProviderConfig,dubbo,com.hyf.openapi.interfaces.ApiInterface,providerService]; root of factory hierarchy
2016/02/05 15:56:08,814 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:56:08,814 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:56:08,830 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,832 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:56:08,868 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:56:08,868 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:56:08,869 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,870 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:56:08,870 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:56:08,870 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:56:08,870 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,870 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:56:08,871 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:56:08,871 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:56:08,874 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,874 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,875 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:56:08,875 DEBUG [main] - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,875 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:56:08,878 DEBUG [main] - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@335ee1b3]
2016/02/05 15:56:08,880 DEBUG [main] - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6a7ac23e]
2016/02/05 15:56:08,881 DEBUG [main] - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fe63b60: defining beans [testServiceImpl,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,dataValidator,dubbo-provider-business,com.alibaba.dubbo.config.RegistryConfig,com.alibaba.dubbo.config.ProviderConfig,dubbo,com.hyf.openapi.interfaces.ApiInterface,providerService,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
2016/02/05 15:56:08,882 DEBUG [main] - Creating shared instance of singleton bean 'testServiceImpl'
2016/02/05 15:56:08,882 DEBUG [main] - Creating instance of bean 'testServiceImpl'
2016/02/05 15:56:08,888 DEBUG [main] - Eagerly caching bean 'testServiceImpl' to allow for resolving potential circular references
2016/02/05 15:56:08,897 DEBUG [main] - Finished creating instance of bean 'testServiceImpl'
2016/02/05 15:56:08,898 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2016/02/05 15:56:08,898 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2016/02/05 15:56:08,898 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2016/02/05 15:56:08,898 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2016/02/05 15:56:08,898 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:56:08,899 DEBUG [main] - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:56:08,900 DEBUG [main] - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
2016/02/05 15:56:08,901 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
2016/02/05 15:56:08,901 DEBUG [main] - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:56:08,901 DEBUG [main] - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:56:08,902 DEBUG [main] - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
2016/02/05 15:56:08,905 DEBUG [main] - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:56:08,905 DEBUG [main] - Creating shared instance of singleton bean 'dataValidator'
2016/02/05 15:56:08,905 DEBUG [main] - Creating instance of bean 'dataValidator'
2016/02/05 15:56:08,946 DEBUG [main] - Eagerly caching bean 'dataValidator' to allow for resolving potential circular references
2016/02/05 15:56:08,948 DEBUG [main] - Finished creating instance of bean 'dataValidator'
2016/02/05 15:56:08,948 DEBUG [main] - Creating shared instance of singleton bean 'dubbo-provider-business'
2016/02/05 15:56:08,948 DEBUG [main] - Creating instance of bean 'dubbo-provider-business'
2016/02/05 15:56:08,951 DEBUG [main] - Eagerly caching bean 'dubbo-provider-business' to allow for resolving potential circular references
2016/02/05 15:56:08,960 DEBUG [main] - Finished creating instance of bean 'dubbo-provider-business'
2016/02/05 15:56:08,960 DEBUG [main] - Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:56:08,960 DEBUG [main] - Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:56:08,962 DEBUG [main] - Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
2016/02/05 15:56:08,967 DEBUG [main] - Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:56:08,967 DEBUG [main] - Creating shared instance of singleton bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:56:08,967 DEBUG [main] - Creating instance of bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:56:08,972 DEBUG [main] - Eagerly caching bean 'com.alibaba.dubbo.config.ProviderConfig' to allow for resolving potential circular references
2016/02/05 15:56:09,018 DEBUG [main] - Finished creating instance of bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:56:09,018 DEBUG [main] - Creating shared instance of singleton bean 'dubbo'
2016/02/05 15:56:09,018 DEBUG [main] - Creating instance of bean 'dubbo'
2016/02/05 15:56:09,020 DEBUG [main] - Eagerly caching bean 'dubbo' to allow for resolving potential circular references
2016/02/05 15:56:09,024 DEBUG [main] - Finished creating instance of bean 'dubbo'
2016/02/05 15:56:09,025 DEBUG [main] - Creating shared instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,025 DEBUG [main] - Creating instance of bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,051 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws com.alibaba.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,151 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws com.alibaba.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,168 DEBUG [main] - Eagerly caching bean 'com.hyf.openapi.interfaces.ApiInterface' to allow for resolving potential circular references
2016/02/05 15:56:09,185 DEBUG [main] - Creating shared instance of singleton bean 'providerService'
2016/02/05 15:56:09,185 DEBUG [main] - Creating instance of bean 'providerService'
2016/02/05 15:56:09,188 DEBUG [main] - Registered injected element on class [com.hyf.openapi.impl.ApiInterfaceServiceImpl]: AutowiredFieldElement for com.hyf.openapi.utils.DataValidator com.hyf.openapi.impl.ApiInterfaceServiceImpl.dataValidator
2016/02/05 15:56:09,189 DEBUG [main] - Eagerly caching bean 'providerService' to allow for resolving potential circular references
2016/02/05 15:56:09,190 DEBUG [main] - Processing injected element of bean 'providerService': AutowiredFieldElement for com.hyf.openapi.utils.DataValidator com.hyf.openapi.impl.ApiInterfaceServiceImpl.dataValidator
2016/02/05 15:56:09,192 DEBUG [main] - Returning cached instance of singleton bean 'dataValidator'
2016/02/05 15:56:09,192 DEBUG [main] - Autowiring by type from bean name 'providerService' to bean named 'dataValidator'
2016/02/05 15:56:09,193 DEBUG [main] - Finished creating instance of bean 'providerService'
2016/02/05 15:56:09,195 DEBUG [main] - Invoking afterPropertiesSet() on bean with name 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,195 DEBUG [main] - Returning cached instance of singleton bean 'com.alibaba.dubbo.config.ProviderConfig'
2016/02/05 15:56:09,195 DEBUG [main] - Returning cached instance of singleton bean 'dubbo'
2016/02/05 15:56:09,195 DEBUG [main] - Returning cached instance of singleton bean 'dubbo-provider-business'
2016/02/05 15:56:09,196 DEBUG [main] - Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
2016/02/05 15:56:09,196 DEBUG [main] - Returning cached instance of singleton bean 'dubbo'
2016/02/05 15:56:09,196 DEBUG [main] - Finished creating instance of bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,197 DEBUG [main] - Returning cached instance of singleton bean 'providerService'
2016/02/05 15:56:09,197 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2016/02/05 15:56:09,197 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
2016/02/05 15:56:09,197 DEBUG [main] - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2016/02/05 15:56:09,234 DEBUG [main] - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3c897063]
2016/02/05 15:56:09,234 DEBUG [main] - Returning cached instance of singleton bean 'lifecycleProcessor'
2016/02/05 15:56:09,239 DEBUG [main] - Returning cached instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,239  INFO [main] -  [DUBBO] The service ready on spring started. service: com.hyf.openapi.interfaces.ApiInterface, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,310 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,326 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,339 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,351  INFO [main] -  [DUBBO] Export dubbo service com.hyf.openapi.interfaces.ApiInterface to local registry, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,352  INFO [main] -  [DUBBO] Export dubbo service com.hyf.openapi.interfaces.ApiInterface to url dubbo://192.168.1.8:20001/com.hyf.openapi.interfaces.ApiInterface?anyhost=true&application=dubbo-provider-business&default.loadbalance=random&default.retries=0&default.threads=100&default.timeout=40000&dubbo=2.5.4-SNAPSHOT&generic=false&interface=com.hyf.openapi.interfaces.ApiInterface&methods=doPost&pid=7956&side=provider&timestamp=1454658969252, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,364 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,400 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,412 DEBUG [main] -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,452 DEBUG [main] -  [DUBBO] Using select timeout of 500, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,452 DEBUG [main] -  [DUBBO] Epoll-bug workaround enabled = false, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,508  INFO [main] -  [DUBBO] Start NettyServer bind /0.0.0.0:20001, export /192.168.1.8:20001, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 15:56:09,511 DEBUG [main] - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016/02/05 15:56:09,511 DEBUG [main] - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016/02/05 15:56:09,512 DEBUG [main] - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016/02/05 15:56:09,513 DEBUG [main] - Returning cached instance of singleton bean 'lifecycleProcessor'
2016/02/05 15:56:09,513 DEBUG [main] - Returning cached instance of singleton bean 'com.hyf.openapi.interfaces.ApiInterface'
2016/02/05 15:56:09,514  INFO [main] - ---------------start dubbo-provider-business sucessful---------------------
2016/02/05 16:07:41,906 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-2] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 16:07:41,972 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-2] - Returning cached instance of singleton bean 'testServiceImpl'
2016/02/05 16:08:05,547 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-4] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 16:08:05,548 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-4] - Returning cached instance of singleton bean 'testServiceImpl'
2016/02/05 16:08:32,485 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-5] -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 16:08:32,486 DEBUG [DubboServerHandler-192.168.1.8:20001-thread-5] - Returning cached instance of singleton bean 'testServiceImpl'
2016/02/05 16:09:09,522 DEBUG [New I/O worker #2] -  [DUBBO] Receive heartbeat response in thread New I/O worker #2, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 16:09:09,530 DEBUG [dubbo-remoting-server-heartbeat-thread-1] -  [DUBBO] Send heartbeat to remote channel /192.168.1.8:49830, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
2016/02/05 16:09:41,846 DEBUG [New I/O worker #1] -  [DUBBO] Received heartbeat from remote channel /192.168.1.8:49797, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.4-SNAPSHOT, current host: 127.0.0.1
